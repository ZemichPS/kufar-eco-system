plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.springdoc.openapi-gradle-plugin' version '1.9.0'
    id 'com.github.davidmc24.gradle.plugin.avro' version '1.9.1'
}

group = 'by.zemich'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}


ext {
    set('springCloudVersion', "2024.0.0")
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://packages.confluent.io/maven/"
    }
}



dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    implementation 'org.springframework.kafka:spring-kafka'

    implementation 'io.confluent:kafka-avro-serializer:7.8.0'
    implementation 'io.confluent:kafka-schema-registry-client:7.8.0'
    implementation 'org.apache.avro:avro:1.12.0'

    implementation 'org.springframework.cloud:spring-cloud-starter-config'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'

    implementation 'com.github.ben-manes.caffeine:caffeine:3.2.0'

    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.hypersistence:hypersistence-utils-hibernate-63:3.9.0'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:5.12.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

import com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register("generateAvro", GenerateAvroJavaTask) {
    source = file("src/main/resources/avro")
    outputDir = file("src/main/java")
    createSetters = true
}
