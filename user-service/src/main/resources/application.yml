spring:
  application:
    name: user-application

  kafka:
    bootstrap-servers: localhost:9092
    properties:
      schema.registry.url: http://localhost:8085

  cloud:
    config:
      enabled: false

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 326426427488-9e2otl1vudf6nsd3ifd6v8k5hm28act4.apps.googleusercontent.com
            client-secret: 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
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - email
              - profile
              - openid
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo

  datasource:
    url: jdbc:postgresql://localhost:5438/user-db
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    hikari:
      schema: app
      maximum-pool-size: 10
      minimum-idle: 2
      idle-timeout: 600000
      connection-timeout: 30000
      pool-name: HikariPool

  jpa:
    hibernate:
      ddl-auto: none # либо update/handle-drop, если ты это используешь
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        show_sql: true

  flyway:
    enabled: true
    locations: classpath:db/migration
    schemas: app
    baseline-on-migrate: true

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    by.zemich.userservice.infrastructure.security.*: DEBUG

server:
  port: 8012

urls:
  success-register-url: http://localhost:3000/oauth-success

token:
  signing:
    key: 3808a7fe09ca596c8f6c9a2793e6a601b940a079ea16dd030e12b2c43642eab5b9cc381ea12e60902482961f90b325aa5ae43d4f42bde750545453d022dd5a40af74ded8d23bbed2041b78cbd66f9d48758538a3559c96839f4ead5351b0926e5e37d38615c981864b505514279b9309134b335dec21743170b424c1079c8c9fad8e7f4b07581e1ead4cab1254362a492c62dedda6f22ec7ebec388c492b74e8047b624483084873e8623153350c1291d24f13781c93efb3c3c78a5bfb6a3da8b9af9aa584f173e58dd2341b599d368a5c2c59fc90978921eb43a6e3dda3804127c55dd7fab4cb95956fcd9d499d46c46f74a074e32df0721632c5ddee41bb6d