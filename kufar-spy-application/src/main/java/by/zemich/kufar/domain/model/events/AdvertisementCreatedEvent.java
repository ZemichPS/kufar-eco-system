/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package by.zemich.kufar.domain.model.events;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AdvertisementCreatedEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4174366904614999042L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AdvertisementCreatedEvent\",\"namespace\":\"by.zemich.kufar.domain.model.events\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"kufarId\",\"type\":\"long\"},{\"name\":\"link\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"category\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"commerce\",\"type\":\"boolean\"},{\"name\":\"subject\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"publishedAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-micros\"}},{\"name\":\"type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"priceInByn\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":10,\"scale\":2}},{\"name\":\"priceInUsd\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":10,\"scale\":2}},{\"name\":\"details\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"fullyFunctional\",\"type\":\"boolean\"},{\"name\":\"images\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"sellerId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"parameters\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Parameter\",\"fields\":[{\"name\":\"identity\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"value\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"label\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.UUIDConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMicrosConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<AdvertisementCreatedEvent> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AdvertisementCreatedEvent> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AdvertisementCreatedEvent> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AdvertisementCreatedEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AdvertisementCreatedEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AdvertisementCreatedEvent to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AdvertisementCreatedEvent from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AdvertisementCreatedEvent instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AdvertisementCreatedEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.util.UUID id;
  private long kufarId;
  private java.lang.String link;
  private java.lang.String category;
  private boolean commerce;
  private java.lang.String subject;
  private java.time.Instant publishedAt;
  private java.lang.String type;
  private java.math.BigDecimal priceInByn;
  private java.math.BigDecimal priceInUsd;
  private java.lang.String details;
  private boolean fullyFunctional;
  private java.lang.String images;
  private java.lang.String sellerId;
  private java.util.List<by.zemich.kufar.domain.model.events.Parameter> parameters;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AdvertisementCreatedEvent() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param kufarId The new value for kufarId
   * @param link The new value for link
   * @param category The new value for category
   * @param commerce The new value for commerce
   * @param subject The new value for subject
   * @param publishedAt The new value for publishedAt
   * @param type The new value for type
   * @param priceInByn The new value for priceInByn
   * @param priceInUsd The new value for priceInUsd
   * @param details The new value for details
   * @param fullyFunctional The new value for fullyFunctional
   * @param images The new value for images
   * @param sellerId The new value for sellerId
   * @param parameters The new value for parameters
   */
  public AdvertisementCreatedEvent(java.util.UUID id, java.lang.Long kufarId, java.lang.String link, java.lang.String category, java.lang.Boolean commerce, java.lang.String subject, java.time.Instant publishedAt, java.lang.String type, java.math.BigDecimal priceInByn, java.math.BigDecimal priceInUsd, java.lang.String details, java.lang.Boolean fullyFunctional, java.lang.String images, java.lang.String sellerId, java.util.List<by.zemich.kufar.domain.model.events.Parameter> parameters) {
    this.id = id;
    this.kufarId = kufarId;
    this.link = link;
    this.category = category;
    this.commerce = commerce;
    this.subject = subject;
    this.publishedAt = publishedAt.truncatedTo(java.time.temporal.ChronoUnit.MICROS);
    this.type = type;
    this.priceInByn = priceInByn;
    this.priceInUsd = priceInUsd;
    this.details = details;
    this.fullyFunctional = fullyFunctional;
    this.images = images;
    this.sellerId = sellerId;
    this.parameters = parameters;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return kufarId;
    case 2: return link;
    case 3: return category;
    case 4: return commerce;
    case 5: return subject;
    case 6: return publishedAt;
    case 7: return type;
    case 8: return priceInByn;
    case 9: return priceInUsd;
    case 10: return details;
    case 11: return fullyFunctional;
    case 12: return images;
    case 13: return sellerId;
    case 14: return parameters;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      new org.apache.avro.Conversions.UUIDConversion(),
      null,
      null,
      null,
      null,
      null,
      new org.apache.avro.data.TimeConversions.TimestampMicrosConversion(),
      null,
      new org.apache.avro.Conversions.DecimalConversion(),
      new org.apache.avro.Conversions.DecimalConversion(),
      null,
      null,
      null,
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.util.UUID)value$; break;
    case 1: kufarId = (java.lang.Long)value$; break;
    case 2: link = value$ != null ? value$.toString() : null; break;
    case 3: category = value$ != null ? value$.toString() : null; break;
    case 4: commerce = (java.lang.Boolean)value$; break;
    case 5: subject = value$ != null ? value$.toString() : null; break;
    case 6: publishedAt = (java.time.Instant)value$; break;
    case 7: type = value$ != null ? value$.toString() : null; break;
    case 8: priceInByn = (java.math.BigDecimal)value$; break;
    case 9: priceInUsd = (java.math.BigDecimal)value$; break;
    case 10: details = value$ != null ? value$.toString() : null; break;
    case 11: fullyFunctional = (java.lang.Boolean)value$; break;
    case 12: images = value$ != null ? value$.toString() : null; break;
    case 13: sellerId = value$ != null ? value$.toString() : null; break;
    case 14: parameters = (java.util.List<by.zemich.kufar.domain.model.events.Parameter>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.util.UUID getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.util.UUID value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'kufarId' field.
   * @return The value of the 'kufarId' field.
   */
  public long getKufarId() {
    return kufarId;
  }


  /**
   * Sets the value of the 'kufarId' field.
   * @param value the value to set.
   */
  public void setKufarId(long value) {
    this.kufarId = value;
  }

  /**
   * Gets the value of the 'link' field.
   * @return The value of the 'link' field.
   */
  public java.lang.String getLink() {
    return link;
  }


  /**
   * Sets the value of the 'link' field.
   * @param value the value to set.
   */
  public void setLink(java.lang.String value) {
    this.link = value;
  }

  /**
   * Gets the value of the 'category' field.
   * @return The value of the 'category' field.
   */
  public java.lang.String getCategory() {
    return category;
  }


  /**
   * Sets the value of the 'category' field.
   * @param value the value to set.
   */
  public void setCategory(java.lang.String value) {
    this.category = value;
  }

  /**
   * Gets the value of the 'commerce' field.
   * @return The value of the 'commerce' field.
   */
  public boolean getCommerce() {
    return commerce;
  }


  /**
   * Sets the value of the 'commerce' field.
   * @param value the value to set.
   */
  public void setCommerce(boolean value) {
    this.commerce = value;
  }

  /**
   * Gets the value of the 'subject' field.
   * @return The value of the 'subject' field.
   */
  public java.lang.String getSubject() {
    return subject;
  }


  /**
   * Sets the value of the 'subject' field.
   * @param value the value to set.
   */
  public void setSubject(java.lang.String value) {
    this.subject = value;
  }

  /**
   * Gets the value of the 'publishedAt' field.
   * @return The value of the 'publishedAt' field.
   */
  public java.time.Instant getPublishedAt() {
    return publishedAt;
  }


  /**
   * Sets the value of the 'publishedAt' field.
   * @param value the value to set.
   */
  public void setPublishedAt(java.time.Instant value) {
    this.publishedAt = value.truncatedTo(java.time.temporal.ChronoUnit.MICROS);
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public java.lang.String getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.String value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'priceInByn' field.
   * @return The value of the 'priceInByn' field.
   */
  public java.math.BigDecimal getPriceInByn() {
    return priceInByn;
  }


  /**
   * Sets the value of the 'priceInByn' field.
   * @param value the value to set.
   */
  public void setPriceInByn(java.math.BigDecimal value) {
    this.priceInByn = value;
  }

  /**
   * Gets the value of the 'priceInUsd' field.
   * @return The value of the 'priceInUsd' field.
   */
  public java.math.BigDecimal getPriceInUsd() {
    return priceInUsd;
  }


  /**
   * Sets the value of the 'priceInUsd' field.
   * @param value the value to set.
   */
  public void setPriceInUsd(java.math.BigDecimal value) {
    this.priceInUsd = value;
  }

  /**
   * Gets the value of the 'details' field.
   * @return The value of the 'details' field.
   */
  public java.lang.String getDetails() {
    return details;
  }


  /**
   * Sets the value of the 'details' field.
   * @param value the value to set.
   */
  public void setDetails(java.lang.String value) {
    this.details = value;
  }

  /**
   * Gets the value of the 'fullyFunctional' field.
   * @return The value of the 'fullyFunctional' field.
   */
  public boolean getFullyFunctional() {
    return fullyFunctional;
  }


  /**
   * Sets the value of the 'fullyFunctional' field.
   * @param value the value to set.
   */
  public void setFullyFunctional(boolean value) {
    this.fullyFunctional = value;
  }

  /**
   * Gets the value of the 'images' field.
   * @return The value of the 'images' field.
   */
  public java.lang.String getImages() {
    return images;
  }


  /**
   * Sets the value of the 'images' field.
   * @param value the value to set.
   */
  public void setImages(java.lang.String value) {
    this.images = value;
  }

  /**
   * Gets the value of the 'sellerId' field.
   * @return The value of the 'sellerId' field.
   */
  public java.lang.String getSellerId() {
    return sellerId;
  }


  /**
   * Sets the value of the 'sellerId' field.
   * @param value the value to set.
   */
  public void setSellerId(java.lang.String value) {
    this.sellerId = value;
  }

  /**
   * Gets the value of the 'parameters' field.
   * @return The value of the 'parameters' field.
   */
  public java.util.List<by.zemich.kufar.domain.model.events.Parameter> getParameters() {
    return parameters;
  }


  /**
   * Sets the value of the 'parameters' field.
   * @param value the value to set.
   */
  public void setParameters(java.util.List<by.zemich.kufar.domain.model.events.Parameter> value) {
    this.parameters = value;
  }

  /**
   * Creates a new AdvertisementCreatedEvent RecordBuilder.
   * @return A new AdvertisementCreatedEvent RecordBuilder
   */
  public static by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder newBuilder() {
    return new by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder();
  }

  /**
   * Creates a new AdvertisementCreatedEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AdvertisementCreatedEvent RecordBuilder
   */
  public static by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder newBuilder(by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder other) {
    if (other == null) {
      return new by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder();
    } else {
      return new by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder(other);
    }
  }

  /**
   * Creates a new AdvertisementCreatedEvent RecordBuilder by copying an existing AdvertisementCreatedEvent instance.
   * @param other The existing instance to copy.
   * @return A new AdvertisementCreatedEvent RecordBuilder
   */
  public static by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder newBuilder(by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent other) {
    if (other == null) {
      return new by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder();
    } else {
      return new by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder(other);
    }
  }

  /**
   * RecordBuilder for AdvertisementCreatedEvent instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AdvertisementCreatedEvent>
    implements org.apache.avro.data.RecordBuilder<AdvertisementCreatedEvent> {

    private java.util.UUID id;
    private long kufarId;
    private java.lang.String link;
    private java.lang.String category;
    private boolean commerce;
    private java.lang.String subject;
    private java.time.Instant publishedAt;
    private java.lang.String type;
    private java.math.BigDecimal priceInByn;
    private java.math.BigDecimal priceInUsd;
    private java.lang.String details;
    private boolean fullyFunctional;
    private java.lang.String images;
    private java.lang.String sellerId;
    private java.util.List<by.zemich.kufar.domain.model.events.Parameter> parameters;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.kufarId)) {
        this.kufarId = data().deepCopy(fields()[1].schema(), other.kufarId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.link)) {
        this.link = data().deepCopy(fields()[2].schema(), other.link);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.category)) {
        this.category = data().deepCopy(fields()[3].schema(), other.category);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.commerce)) {
        this.commerce = data().deepCopy(fields()[4].schema(), other.commerce);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.subject)) {
        this.subject = data().deepCopy(fields()[5].schema(), other.subject);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.publishedAt)) {
        this.publishedAt = data().deepCopy(fields()[6].schema(), other.publishedAt);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.type)) {
        this.type = data().deepCopy(fields()[7].schema(), other.type);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.priceInByn)) {
        this.priceInByn = data().deepCopy(fields()[8].schema(), other.priceInByn);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.priceInUsd)) {
        this.priceInUsd = data().deepCopy(fields()[9].schema(), other.priceInUsd);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.details)) {
        this.details = data().deepCopy(fields()[10].schema(), other.details);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.fullyFunctional)) {
        this.fullyFunctional = data().deepCopy(fields()[11].schema(), other.fullyFunctional);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.images)) {
        this.images = data().deepCopy(fields()[12].schema(), other.images);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.sellerId)) {
        this.sellerId = data().deepCopy(fields()[13].schema(), other.sellerId);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.parameters)) {
        this.parameters = data().deepCopy(fields()[14].schema(), other.parameters);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
    }

    /**
     * Creates a Builder by copying an existing AdvertisementCreatedEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.kufarId)) {
        this.kufarId = data().deepCopy(fields()[1].schema(), other.kufarId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.link)) {
        this.link = data().deepCopy(fields()[2].schema(), other.link);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.category)) {
        this.category = data().deepCopy(fields()[3].schema(), other.category);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.commerce)) {
        this.commerce = data().deepCopy(fields()[4].schema(), other.commerce);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.subject)) {
        this.subject = data().deepCopy(fields()[5].schema(), other.subject);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.publishedAt)) {
        this.publishedAt = data().deepCopy(fields()[6].schema(), other.publishedAt);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.type)) {
        this.type = data().deepCopy(fields()[7].schema(), other.type);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.priceInByn)) {
        this.priceInByn = data().deepCopy(fields()[8].schema(), other.priceInByn);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.priceInUsd)) {
        this.priceInUsd = data().deepCopy(fields()[9].schema(), other.priceInUsd);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.details)) {
        this.details = data().deepCopy(fields()[10].schema(), other.details);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.fullyFunctional)) {
        this.fullyFunctional = data().deepCopy(fields()[11].schema(), other.fullyFunctional);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.images)) {
        this.images = data().deepCopy(fields()[12].schema(), other.images);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.sellerId)) {
        this.sellerId = data().deepCopy(fields()[13].schema(), other.sellerId);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.parameters)) {
        this.parameters = data().deepCopy(fields()[14].schema(), other.parameters);
        fieldSetFlags()[14] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.util.UUID getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder setId(java.util.UUID value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'kufarId' field.
      * @return The value.
      */
    public long getKufarId() {
      return kufarId;
    }


    /**
      * Sets the value of the 'kufarId' field.
      * @param value The value of 'kufarId'.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder setKufarId(long value) {
      validate(fields()[1], value);
      this.kufarId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'kufarId' field has been set.
      * @return True if the 'kufarId' field has been set, false otherwise.
      */
    public boolean hasKufarId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'kufarId' field.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder clearKufarId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'link' field.
      * @return The value.
      */
    public java.lang.String getLink() {
      return link;
    }


    /**
      * Sets the value of the 'link' field.
      * @param value The value of 'link'.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder setLink(java.lang.String value) {
      validate(fields()[2], value);
      this.link = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'link' field has been set.
      * @return True if the 'link' field has been set, false otherwise.
      */
    public boolean hasLink() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'link' field.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder clearLink() {
      link = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'category' field.
      * @return The value.
      */
    public java.lang.String getCategory() {
      return category;
    }


    /**
      * Sets the value of the 'category' field.
      * @param value The value of 'category'.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder setCategory(java.lang.String value) {
      validate(fields()[3], value);
      this.category = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'category' field has been set.
      * @return True if the 'category' field has been set, false otherwise.
      */
    public boolean hasCategory() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'category' field.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder clearCategory() {
      category = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'commerce' field.
      * @return The value.
      */
    public boolean getCommerce() {
      return commerce;
    }


    /**
      * Sets the value of the 'commerce' field.
      * @param value The value of 'commerce'.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder setCommerce(boolean value) {
      validate(fields()[4], value);
      this.commerce = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'commerce' field has been set.
      * @return True if the 'commerce' field has been set, false otherwise.
      */
    public boolean hasCommerce() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'commerce' field.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder clearCommerce() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'subject' field.
      * @return The value.
      */
    public java.lang.String getSubject() {
      return subject;
    }


    /**
      * Sets the value of the 'subject' field.
      * @param value The value of 'subject'.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder setSubject(java.lang.String value) {
      validate(fields()[5], value);
      this.subject = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'subject' field has been set.
      * @return True if the 'subject' field has been set, false otherwise.
      */
    public boolean hasSubject() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'subject' field.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder clearSubject() {
      subject = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'publishedAt' field.
      * @return The value.
      */
    public java.time.Instant getPublishedAt() {
      return publishedAt;
    }


    /**
      * Sets the value of the 'publishedAt' field.
      * @param value The value of 'publishedAt'.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder setPublishedAt(java.time.Instant value) {
      validate(fields()[6], value);
      this.publishedAt = value.truncatedTo(java.time.temporal.ChronoUnit.MICROS);
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'publishedAt' field has been set.
      * @return True if the 'publishedAt' field has been set, false otherwise.
      */
    public boolean hasPublishedAt() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'publishedAt' field.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder clearPublishedAt() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public java.lang.String getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder setType(java.lang.String value) {
      validate(fields()[7], value);
      this.type = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder clearType() {
      type = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'priceInByn' field.
      * @return The value.
      */
    public java.math.BigDecimal getPriceInByn() {
      return priceInByn;
    }


    /**
      * Sets the value of the 'priceInByn' field.
      * @param value The value of 'priceInByn'.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder setPriceInByn(java.math.BigDecimal value) {
      validate(fields()[8], value);
      this.priceInByn = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'priceInByn' field has been set.
      * @return True if the 'priceInByn' field has been set, false otherwise.
      */
    public boolean hasPriceInByn() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'priceInByn' field.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder clearPriceInByn() {
      priceInByn = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'priceInUsd' field.
      * @return The value.
      */
    public java.math.BigDecimal getPriceInUsd() {
      return priceInUsd;
    }


    /**
      * Sets the value of the 'priceInUsd' field.
      * @param value The value of 'priceInUsd'.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder setPriceInUsd(java.math.BigDecimal value) {
      validate(fields()[9], value);
      this.priceInUsd = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'priceInUsd' field has been set.
      * @return True if the 'priceInUsd' field has been set, false otherwise.
      */
    public boolean hasPriceInUsd() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'priceInUsd' field.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder clearPriceInUsd() {
      priceInUsd = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'details' field.
      * @return The value.
      */
    public java.lang.String getDetails() {
      return details;
    }


    /**
      * Sets the value of the 'details' field.
      * @param value The value of 'details'.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder setDetails(java.lang.String value) {
      validate(fields()[10], value);
      this.details = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'details' field has been set.
      * @return True if the 'details' field has been set, false otherwise.
      */
    public boolean hasDetails() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'details' field.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder clearDetails() {
      details = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'fullyFunctional' field.
      * @return The value.
      */
    public boolean getFullyFunctional() {
      return fullyFunctional;
    }


    /**
      * Sets the value of the 'fullyFunctional' field.
      * @param value The value of 'fullyFunctional'.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder setFullyFunctional(boolean value) {
      validate(fields()[11], value);
      this.fullyFunctional = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'fullyFunctional' field has been set.
      * @return True if the 'fullyFunctional' field has been set, false otherwise.
      */
    public boolean hasFullyFunctional() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'fullyFunctional' field.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder clearFullyFunctional() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'images' field.
      * @return The value.
      */
    public java.lang.String getImages() {
      return images;
    }


    /**
      * Sets the value of the 'images' field.
      * @param value The value of 'images'.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder setImages(java.lang.String value) {
      validate(fields()[12], value);
      this.images = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'images' field has been set.
      * @return True if the 'images' field has been set, false otherwise.
      */
    public boolean hasImages() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'images' field.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder clearImages() {
      images = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'sellerId' field.
      * @return The value.
      */
    public java.lang.String getSellerId() {
      return sellerId;
    }


    /**
      * Sets the value of the 'sellerId' field.
      * @param value The value of 'sellerId'.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder setSellerId(java.lang.String value) {
      validate(fields()[13], value);
      this.sellerId = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'sellerId' field has been set.
      * @return True if the 'sellerId' field has been set, false otherwise.
      */
    public boolean hasSellerId() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'sellerId' field.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder clearSellerId() {
      sellerId = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'parameters' field.
      * @return The value.
      */
    public java.util.List<by.zemich.kufar.domain.model.events.Parameter> getParameters() {
      return parameters;
    }


    /**
      * Sets the value of the 'parameters' field.
      * @param value The value of 'parameters'.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder setParameters(java.util.List<by.zemich.kufar.domain.model.events.Parameter> value) {
      validate(fields()[14], value);
      this.parameters = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'parameters' field has been set.
      * @return True if the 'parameters' field has been set, false otherwise.
      */
    public boolean hasParameters() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'parameters' field.
      * @return This builder.
      */
    public by.zemich.kufar.domain.model.events.AdvertisementCreatedEvent.Builder clearParameters() {
      parameters = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AdvertisementCreatedEvent build() {
      try {
        AdvertisementCreatedEvent record = new AdvertisementCreatedEvent();
        record.id = fieldSetFlags()[0] ? this.id : (java.util.UUID) defaultValue(fields()[0]);
        record.kufarId = fieldSetFlags()[1] ? this.kufarId : (java.lang.Long) defaultValue(fields()[1]);
        record.link = fieldSetFlags()[2] ? this.link : (java.lang.String) defaultValue(fields()[2]);
        record.category = fieldSetFlags()[3] ? this.category : (java.lang.String) defaultValue(fields()[3]);
        record.commerce = fieldSetFlags()[4] ? this.commerce : (java.lang.Boolean) defaultValue(fields()[4]);
        record.subject = fieldSetFlags()[5] ? this.subject : (java.lang.String) defaultValue(fields()[5]);
        record.publishedAt = fieldSetFlags()[6] ? this.publishedAt : (java.time.Instant) defaultValue(fields()[6]);
        record.type = fieldSetFlags()[7] ? this.type : (java.lang.String) defaultValue(fields()[7]);
        record.priceInByn = fieldSetFlags()[8] ? this.priceInByn : (java.math.BigDecimal) defaultValue(fields()[8]);
        record.priceInUsd = fieldSetFlags()[9] ? this.priceInUsd : (java.math.BigDecimal) defaultValue(fields()[9]);
        record.details = fieldSetFlags()[10] ? this.details : (java.lang.String) defaultValue(fields()[10]);
        record.fullyFunctional = fieldSetFlags()[11] ? this.fullyFunctional : (java.lang.Boolean) defaultValue(fields()[11]);
        record.images = fieldSetFlags()[12] ? this.images : (java.lang.String) defaultValue(fields()[12]);
        record.sellerId = fieldSetFlags()[13] ? this.sellerId : (java.lang.String) defaultValue(fields()[13]);
        record.parameters = fieldSetFlags()[14] ? this.parameters : (java.util.List<by.zemich.kufar.domain.model.events.Parameter>) defaultValue(fields()[14]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AdvertisementCreatedEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<AdvertisementCreatedEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AdvertisementCreatedEvent>
    READER$ = (org.apache.avro.io.DatumReader<AdvertisementCreatedEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










